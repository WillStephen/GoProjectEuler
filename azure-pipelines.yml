# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)' # Go workspace path
  modulePath: '$(GOPATH)/src/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    echo 'Current dir:'
    pwd
    go build -v .
  workingDirectory: '$(modulePath)/solutions'
  displayName: 'Get dependencies, then build'

- script: |
    go get github.com/tebeka/go2xunit
    go test -v | go2xunit -output tests.xml
  workingDirectory: '$(modulePath)/test'
  displayName: 'Run unit tests'

- task: PublishTestResults@2
  inputs:
    testRunner: xUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/**/tests.xml
